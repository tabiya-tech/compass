name: Main CI
on: push
  #push:
  # branches:
  #   - main
  #pull_request:
#  types: [ opened, synchronize, reopened ]

jobs:
  # Setup envs
  setup-env:
    uses: ./.github/workflows/setup-env.yml
    secrets: inherit
    with:
      target-environment: dev
  # Backend
  test-backend:
    uses: ./.github/workflows/unit-test-backend.yml
    secrets: inherit
    with:
      target-environment: dev
  test-frontend:
    uses: ./.github/workflows/test-frontend.yml
    secrets: inherit
    with:
      target-environment: dev
  deploy-auth:
    # This job will only run if the push event is on the main branch or the commit message contains '[pulumi up]'
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, '[pulumi up]'))
    uses: ./.github/workflows/deploy-auth.yml
    needs: [ setup-env ]
    secrets: inherit
    with:
      target-environment: dev
      frontend-domain: ${{ needs.setup-env.outputs.frontend-domain }}
  deploy-backend:
    # This job will only run if the push event is on the main branch or the commit message contains '[pulumi up]'
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, '[pulumi up]'))
    needs: [ test-backend ]
    uses: ./.github/workflows/deploy-backend.yml
    secrets: inherit
    with:
      target-environment: dev
  deploy-frontend:
    # This job will only run if the push event is on the main branch or the commit message contains '[pulumi up]'
    if: github.event_name == 'push' && ( github.ref == 'refs/heads/main' || contains(github.event.head_commit.message, '[pulumi up]'))
    needs: [ test-frontend, setup-env, deploy-auth, deploy-backend ]
    uses: ./.github/workflows/deploy-frontend.yml
    secrets: inherit
    with:
      target-environment: dev
      backendRestApiURLBase: ${{ needs.deploy-backend.outputs.backendRestApiURLBase }}
  smoke-test-backend:
    needs: [ deploy-backend ]
    uses: ./.github/workflows/smoke-test-version.yml
    secrets: inherit
    with:
      component: backend
      expected-version-info: ${{ needs.deploy-backend.outputs.version-info }}
      component-url: ${{ needs.deploy-backend.outputs.backendRestApiURLBase }}
