name: Tabiya Compass Unit Tests
on:
  workflow_call:
    inputs:
      target-environment:
        required: true
        type: string
jobs:
  unit-test:
    runs-on: ubuntu-latest
    environment: ${{ inputs.target-environment }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Load cached Poetry installation
        id: cached-poetry
        uses: actions/cache@v4
        with:
          path: ~/.local
          key: poetry-0
      - name: Install Poetry
        uses: snok/install-poetry@v1
      - name: Load cached Poetry cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pypoetry
          key: poetry-cache-${{ runner.os }}-${{ steps.setup_python.outputs.python-version }}-${{ env.POETRY_VERSION }}
      - name: Install dependencies
        shell: bash
        run: |
          poetry lock --no-update --no-interaction
          poetry install --no-interaction
        working-directory: backend
      - name: Linting Bandit
        shell: bash
        run: poetry run bandit -c bandit.yaml -r .
        working-directory: backend
      - name: Linting Pylint
        shell: bash
        # Do not fail the build if there are linting errors (--exit-zero)
        # Once we have fixed all the linting errors, we can remove this flag
        run:  poetry run pylint --exit-zero --load-plugins pylint_pydantic agent app esco_search
        working-directory: backend
      - name: Setup google-cloud-auth
        uses: google-github-actions/auth@v2.1.2
        with:
          credentials_json:
            ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
      - name: Run unit tests
        shell: bash
        run: poetry run pytest -k "not smoke_test"
        working-directory: backend
