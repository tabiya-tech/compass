name: Tabiya Compass Frontend Deploy
on:
  workflow_call:
    inputs:
      target-environment:
        required: true
        type: string
      backend-url:
        required: true
        type: string
      identity_platform_client_api_key:
        required: true
        type: string
      identity_platform_client_firebase_auth_domain:
        required: true
        type: string
    outputs:
      frontend-url:
        description: 'The bucket frontend url'
        value: ${{ jobs.deploy.outputs.frontend-url }}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: ${{ inputs.target-environment }}
    outputs:
      frontend-url: ${{ steps.pulumi.outputs.new_ui_url }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set Version Info for POC frontend
        id: setPOCVersionInfo
        run: |
          ./pipeline/setVersionInfo.sh frontend/public/data/version.json
          cat frontend/public/data/version.json
          EOF=$(dd if=/dev/urandom bs=15 count=1 status=none | base64)
          echo "version-info<<$EOF" >> "$GITHUB_OUTPUT"
          echo "$(cat ./frontend/public/data/version.json)" >> "$GITHUB_OUTPUT"
          echo "$EOF" >> "$GITHUB_OUTPUT"
      - name: Use Node.js 20.x for POC frontend
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'yarn'
          cache-dependency-path: frontend/yarn.lock
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn cache dir)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v4
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Install node packages in POC frontend
        run: yarn install
        working-directory: frontend
      - name: build POC frontend
        run: yarn run build
        working-directory: frontend
        env:
          NEXT_PUBLIC_COMPASS_URL: ${{ inputs.backend-url }}
          NEXT_PUBLIC_DEFAULT_COMPASS_ENDPOINT: 'poc/conversation'
          NEXT_PUBLIC_AVAILABLE_COMPASS_ENDPOINTS: '["poc/conversation", "poc/conversation_sandbox"]'
      - name: Download frontend build bundle
        uses: actions/download-artifact@v4
        with:
          name: frontend.build.folder
          path: frontend-new/build/
      - name: Setup python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip' # caching pip dependencies
      - name: Install python packages
        run: pip install -r requirements.txt
        working-directory: iac
      - name: Setup google-cloud-auth
        uses: google-github-actions/auth@v2.1.2
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_JSON }}
      - name: Build frontend-new env.js file
        # we are basically creating a js file with the passed env variables
        # that can be executed in the client browser when the js file is loaded
        run: |
          touch frontend-new/build/data/env.js
          echo "window.tabiyaConfig = {" > frontend-new/build/data/env.js
          echo "\"FIREBASE_API_KEY\": btoa(\"${{ inputs.identity_platform_client_api_key }}\")," >> frontend-new/build/data/env.js
          echo "\"FIREBASE_AUTH_DOMAIN\": btoa(\"${{ inputs.identity_platform_client_firebase_auth_domain }}\")," >> frontend-new/build/data/env.js
          echo "\"BACKEND_URL\": btoa(\"${{ inputs.backend-url }}\")," >> frontend-new/build/data/env.js
          echo "\"SENTRY_FRONTEND_DSN\": btoa(\"${{ secrets.SENTRY_FRONTEND_DSN }}\")," >> frontend-new/build/data/env.js
          echo "\"SENTRY_AUTH_TOKEN\": btoa(\"${{ secrets.SENTRY_AUTH_TOKEN }}\")" >> frontend-new/build/data/env.js
          echo "};" >> frontend-new/build/data/env.js
          cat frontend-new/build/data/env.js
      - name: Deploy both frontends
        id: pulumi
        uses: pulumi/actions@v5
        with:
          work-dir: iac/frontend
          command: up
          stack-name: tabiya-tech/compass-frontend/${{ inputs.target-environment }}
        env:
          PULUMI_ACCESS_TOKEN: ${{ secrets.PULUMI_ACCESS_TOKEN }}
      - name: Show frontend URL
        run: |
          echo "frontend-url<<${{ steps.pulumi.outputs.bucket_url }}"
          echo "newUI-url<<${{ steps.pulumi.outputs.new_ui_url }}"
